{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bwena\\\\Desktop\\\\BookRecommendationApp\\\\book-recommendation-front\\\\src\\\\Components\\\\Select.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Select = ({\n  value,\n  onChange,\n  categories,\n  className\n}) => {\n  console.log('Select props:', {\n    value,\n    onChange,\n    categories\n  });\n\n  // Ensure categories is an array\n  if (!Array.isArray(categories)) {\n    console.error('Categories prop should be an array:', categories);\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: `max-w-sm mx-auto flex-1 ${className}`,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"categories\",\n      className: \"block mb-3 text-sm font-medium text-[rgb(0,223,154)] w-full\",\n      children: \"Select book Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"categories\" // Added id for the select element\n      ,\n      className: \"block w-full p-4 text-sm text-gray-900 border border-gray-300 rounded-lg bg-gray-50 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white\",\n      value: value,\n      onChange: e => onChange(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"All Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), categories.length > 0 ? categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: category.name,\n        children: category.name\n      }, category.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"No categories available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = Select;\nexport default Select;\nvar _c;\n$RefreshReg$(_c, \"Select\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Select","value","onChange","categories","className","console","log","Array","isArray","error","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","e","target","length","map","category","name","_c","$RefreshReg$"],"sources":["C:/Users/bwena/Desktop/BookRecommendationApp/book-recommendation-front/src/Components/Select.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nconst Select = ({ value, onChange, categories, className }) => {\r\n  console.log('Select props:', { value, onChange, categories });\r\n\r\n  // Ensure categories is an array\r\n  if (!Array.isArray(categories)) {\r\n    console.error('Categories prop should be an array:', categories);\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <form className={`max-w-sm mx-auto flex-1 ${className}`}>\r\n      <label htmlFor=\"categories\" className=\"block mb-3 text-sm font-medium text-[rgb(0,223,154)] w-full\">\r\n        Select book Category\r\n      </label>\r\n      <select \r\n        id=\"categories\" // Added id for the select element\r\n        className=\"block w-full p-4 text-sm text-gray-900 border border-gray-300 rounded-lg bg-gray-50 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white\"\r\n        value={value} \r\n        onChange={e => onChange(e.target.value)} \r\n      >\r\n        <option value=\"\">All Categories</option>\r\n        {categories.length > 0 ? (\r\n          categories.map(category => (\r\n            <option key={category.id} value={category.name}>\r\n              {category.name}\r\n            </option>\r\n          ))\r\n        ) : (\r\n          <option value=\"\">No categories available</option>\r\n        )}\r\n      </select>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,MAAM,GAAGA,CAAC;EAAEC,KAAK;EAAEC,QAAQ;EAAEC,UAAU;EAAEC;AAAU,CAAC,KAAK;EAC7DC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE;IAAEL,KAAK;IAAEC,QAAQ;IAAEC;EAAW,CAAC,CAAC;;EAE7D;EACA,IAAI,CAACI,KAAK,CAACC,OAAO,CAACL,UAAU,CAAC,EAAE;IAC9BE,OAAO,CAACI,KAAK,CAAC,qCAAqC,EAAEN,UAAU,CAAC;IAChE,OAAO,IAAI;EACb;EAEA,oBACEJ,OAAA;IAAMK,SAAS,EAAE,2BAA2BA,SAAS,EAAG;IAAAM,QAAA,gBACtDX,OAAA;MAAOY,OAAO,EAAC,YAAY;MAACP,SAAS,EAAC,6DAA6D;MAAAM,QAAA,EAAC;IAEpG;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACRhB,OAAA;MACEiB,EAAE,EAAC,YAAY,CAAC;MAAA;MAChBZ,SAAS,EAAC,qKAAqK;MAC/KH,KAAK,EAAEA,KAAM;MACbC,QAAQ,EAAEe,CAAC,IAAIf,QAAQ,CAACe,CAAC,CAACC,MAAM,CAACjB,KAAK,CAAE;MAAAS,QAAA,gBAExCX,OAAA;QAAQE,KAAK,EAAC,EAAE;QAAAS,QAAA,EAAC;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACvCZ,UAAU,CAACgB,MAAM,GAAG,CAAC,GACpBhB,UAAU,CAACiB,GAAG,CAACC,QAAQ,iBACrBtB,OAAA;QAA0BE,KAAK,EAAEoB,QAAQ,CAACC,IAAK;QAAAZ,QAAA,EAC5CW,QAAQ,CAACC;MAAI,GADHD,QAAQ,CAACL,EAAE;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhB,CACT,CAAC,gBAEFhB,OAAA;QAAQE,KAAK,EAAC,EAAE;QAAAS,QAAA,EAAC;MAAuB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACjD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX,CAAC;AAACQ,EAAA,GAjCIvB,MAAM;AAmCZ,eAAeA,MAAM;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}